# LIBC DIRECTORY MAKEFILE - v0.1
#
# Not ready to be used as Makefile, it's used by the configure script to build
# the final Makefile, that will be used to build libc
#
# If you haven't already, run the configure script in the top level directory!
#
# In the final makefile, run 'make help' for a list of targets
#
#
# 2019 Diogo Gomes

# TODO
# add help target
# check local build directories
# check HOSTEDOBJS and ARCH_HOSTEDOBJS

SCRIPTVERSION:=0.1

ifneq ($(MADE_CONFIG),true)
$(error We're not properly configured, run ./configure!!)
endif

include config.mk

SUBDIRS:= ctype stdio stdlib string
SUBDIRS_INCLUDE=$(SUBDIRS:=/objs.mk)

FREEOBJS:=\
$(ARCH_FREEOBJS)

include $(SUBDIRS_INCLUDE)

.PHONY: list-freeobjs

list-freeobjs:
	@echo "Freeobjs being used: $(FREEOBJS)"

HOSTEDOBJS=\
$(ARCH_HOSTEDOBJS) \

OBJS=\
$(FREEOBJS) \
$(HOSTEDOBJS) \

LIBK_OBJS=$(FREEOBJS:.o=.libk.o)

#BINARIES=libc.a libk.a # Not ready for libc yet.
BINARIES=libk.a

.PHONY: all clean install install-libs

all: $(BINARIES)

libc.a: $(OBJS)
	$(call cmd,ar)
	$(Q)$(AR) rcs $@ $(OBJS)

libk.a: $(LIBK_OBJS)
	$(call cmd,ar)
	$(Q)$(AR) rcs $@ $(LIBK_OBJS)

%.o: %.c
	$(call cmd,cc)
	$(Q)$(CC) -MD -c $< -o $@ -std=gnu11 $(CFLAGS) $(CLFLAGS)

%.S: %.c
	$(call cmd,as)
	$(Q)$(CC) -MD -c $< -o $@ $(CFLAGS) $(CLFLAGS)

%.libk.o: %.c
	$(call cmd,cc)
	$(Q)$(CC) -MD -c $< -o $@ -std=gnu11 $(LIBK_CFLAGS) $(LIBK_CLFLAGS)

%.libk.o: %.S
	$(call cmd,as)
	$(Q)$(CC) -MD -c $< -o $@ $(LIBK_CFLAGS) $(LIBK_CLFLAGS)

clean:
	-$(Q)rm -f $(BINARIES) *.a
	-$(Q)rm -f $(shell find . -name '*.o')
	-$(Q)rm -f $(shell find . -name '*.d')
	@echo '   Clean done!'

install: install-libs

install-libs: $(BINARIES) $(DESTDIR)$(LIBDIR)/$(BINARIES)

$(DESTDIR)$(LIBDIR)/$(BINARIES): $(BINARIES)
	@echo '   Installing libraries to $(DESTDIR)$(LIBDIR)'
	$(Q)mkdir -p $(DESTDIR)$(LIBDIR)
	$(Q)cp $(BINARIES) $(DESTDIR)$(LIBDIR)

-include $(OBJS:.o=.d)
-include $(LIBK_OBJS:.o=.d)

.PHONY: help

help:
	@printf 'Usage: make [target] ...\n\n'
	@printf 'Miscellaneous:\n'
	@printf '   help\t- Show this help\n' | expand -t 30
	@printf '   list-freeobjs\t - Lists the objects to be included in the freestanding libc\n' |\
	expand -t 30
	@printf '\n'
	@printf 'Build:\n'
	@printf '   [directory]/[target]\t- Builds specified target\n' | expand -t 30
	@printf "   For a list of possible targets, run \'make list-freeobjs\'\n"
	@printf '\n'
	@printf 'Installing:\n'
	@printf '   libk.a\t- Creates the final libk archive\n' | expand -t 30
	@printf '   install\n'
	@printf '   install-libs\t- Installs the final libk.a archive to $(DESTDIR)$(LIBDIR)' |\
	expand -t 30
	@printf '\n'
	@printf 'Cleaning:\n'
	@printf '   clean\t- Remove most generated files' | expand -t 30
	@printf '\n\n'
	@printf 'Written by Diogo Gomes, v%s\n' '$(SCRIPTVERSION)'
	@printf '\n'

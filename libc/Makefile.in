# LIBC DIRECTORY MAKEFILE - v0.1
#
# Not ready to be used as Makefile, it's used by the configure script to build
# the final Makefile, that will be used to build libc
#
# If you haven't already, run the configure script in the top level directory!
#
# In the final makefile, run 'make help' for a list of targets
#
#
# 2019 Diogo Gomes

# TODO
# add help target
# check local build directories
# check HOSTEDOBJS and ARCH_HOSTEDOBJS

ifeq ($(MAKELEVEL),0)

# Build directories (local)

PREFIX?=/usr/local
EXEC_PREFIX?=$(PREFIX)
INCLUDEDIR?=$(PREFIX)/include
LIBDIR?=$(EXEC_PREFIX)/lib

endif

DESTDIR?=$(SYSROOT)

# Default compiler flags

CFLAGS:=$(CFLAGS)
CLFLAGS:= -D__is_libc -Iinclude
CXXFLAGS:=$(CXXFLAGS)
LIBK_CFLAGS:=$(CFLAGS)
LIBK_CLFLAGS:=$(CFLAGS) -D__is_libk
LIBK_CXXFLAGS:=$(CXXFLAGS)

ARCHDIR=arch/$(TARGETARCH)

include $(ARCHDIR)/arch.mk

CFLAGS:=$(CFLAGS) $(ARCH_CFLAGS)
CXXFLAGS:=$(CXXFLAGS) $(ARCH_CXXFLAGS)
LIBK_CFLAGS:=$(LIBK_CFLAGS) $(KERNEL_ARCH_CFLAGS)
LIBK_CXXFLAGS:=$(LIBK_CXXFLAGS) $(KERNEL_ARCH_CXXFLAGS)

FREEOBJS=\
$(ARCH_FREEOBJS) \
stdio/printf.o \
stdio/putchar.o \
stdio/puts.o \
stdlib/abort.o \
string/memcmp.o \
string/memcpy.o \
string/memmove.o \
string/memset.o \
string/strlen.o \

HOSTEDOBJS=\
$(ARCH_HOSTEDOBJS) \

OBJS=\
$(FREEOBJS) \
$(HOSTEDOBJS) \

LIBK_OBJS=$(FREEOBJS:.o=.libk.o)

#BINARIES=libc.a libk.a # Not ready for libc yet.
BINARIES=libk.a

.PHONY: all clean install install-libs help

all: $(BINARIES)

libc.a: $(OBJS)
	$(call cmd,ar)
	$(Q)$(AR) rcs $@ $(OBJS)

libk.a: $(LIBK_OBJS)
	$(call cmd,ar)
	$(Q)$(AR) rcs $@ $(LIBK_OBJS)

%.o: %.c
	$(call cmd,cc)
	$(Q)$(CC) -MD -c $< -o $@ -std=gnu11 $(CFLAGS) $(CLFLAGS)

%.S: %.c
	$(call cmd,as)
	$(Q)$(CC) -MD -c $< -o $@ $(CFLAGS) $(CLFLAGS)

%.libk.o: %.c
	$(call cmd,cc)
	$(Q)$(CC) -MD -c $< -o $@ -std=gnu11 $(LIBK_CFLAGS) $(LIBK_CLFLAGS)

%.libk.o: %.S
	$(call cmd,as)
	$(Q)$(CC) -MD -c $< -o $@ $(LIBK_CFLAGS) $(LIBK_CLFLAGS)

clean:
	-$(Q)rm -f $(BINARIES) *.a
	-$(Q)rm -f $(shell find . -name '*.o')
	-$(Q)rm -f $(shell find . -name '*.d')
	@echo '   Clean done!'

install: install-libs

install-libs: $(BINARIES) $(DESTDIR)$(LIBDIR)/$(BINARIES)

$(DESTDIR)$(LIBDIR)/$(BINARIES): $(BINARIES)
	@echo '   Installing libraries to $(DESTDIR)$(LIBDIR)'
	$(Q)mkdir -p $(DESTDIR)$(LIBDIR)
	$(Q)cp $(BINARIES) $(DESTDIR)$(LIBDIR)

-include $(OBJS:.o=.d)
-include $(LIBK_OBJS:.o=.d)
